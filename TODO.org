Greylost TODO

* DONE get basic PoC working
  CLOSED: [2019-11-24 Sun 19:51]
* DONE timestamps
  CLOSED: [2019-11-26 Tue 08:04]
* DONE sort responses before adding to bloom filter
  CLOSED: [2019-11-26 Tue 15:26]
queries with multiple responses arent guaranteed to be in the same
order each time they are queried. These should be sorted prior to
adding to the bloom filter so that they arent counted dozens of times
due to being out of order
* DONE baseline timer
  CLOSED: [2019-11-27 Wed 14:49]
don't alert on new queries before N time passes. This allows the
software to baseline DNS queries and not give alerts.
* DONE argparse for interface, promisc, etc
  CLOSED: [2019-11-28 Thu 15:28]

* DONE logging
  CLOSED: [2019-11-28 Thu 19:54]
* DONE HUP signal reopens log files.
  CLOSED: [2019-11-28 Thu 22:03]
* DONE daemonize
  CLOSED: [2019-11-29 Fri 09:31]
* DONE finish IPv6 in pypacket
  CLOSED: [2019-11-29 Fri 22:12]
* DONE investigate pypacket alternatives
  CLOSED: [2019-11-29 Fri 22:12]
* DONE offline mode?
  CLOSED: [2019-12-08 Sun 09:25]
+This might not work great; dont know if pcaps keep timestamps in a
manner that I can utilize.+

Abandoning this idea. Might do a different toolset to analyze pcaps.

https://www.elvidence.com.au/understanding-time-stamps-in-packet-capture-data-pcap-files/
* DONE add mmh3 to requirements.txt
  CLOSED: [2019-12-08 Sun 10:24]
This should speed it up a bit
* DONE Splunk/ELK
  CLOSED: [2019-12-08 Sun 11:43]
Add examples of how to ingest this data. Don't really have to add any
code for this...
* DONE ignore list for bloom filter
  CLOSED: [2019-12-11 Wed 10:08]
mcafee is making a ton of random resolutions. we know that this
particular case is benign, so add some feature to ignore these
queries.
* DONE cli flags to set logfile paths
  CLOSED: [2019-12-12 Thu 07:30]
* DONE ability to save/reload filter (for reboots/restarts)
  CLOSED: [2019-12-12 Thu 14:05]
* TODO shared bloom filter when using multiple resolvers
this will be another project, but has other potential use cases.

example HTTP API:
/add?filter=name_here&element=element_goes_here
/lookup?filter=name_here&element=element_goes_here

add a flag to use remote endpoint rather than local filter.
* TODO Alerting for resolutions of known-bad domains
** TODO ability to pull in from feeds
** TODO webhook alerts
http.kali.org
* TODO config file
* TODO test on authoritative DNS server
* TODO cli flags to enable/disable specific logs (all, not dns, ...)
* TODO add malicious domains to blocklist when using w/ dnsmasq
* TODO log in pcap format
* TODO cleanup: are _functions necessary?
* TODO remove repetitive patterns
* TODO use syslog when daemonized; service starts, stops, signal received, ...
* TODO detect dns protocol abuses
- weird TXT/NULL records
- hex/baseN encoded stuff: aabbccddeeff.whatever.com
- volume
- +not dns at all.. they are just sending data over port 53+
* TODO setup.py
* TODO log to socket
* TODO interactive mode
** TODO command prompt w/ readline and whatnot.
** TODO ability to toggle settings.
** TODO ability to query/add elements to ignore/malware lists
** TODO highlight output
